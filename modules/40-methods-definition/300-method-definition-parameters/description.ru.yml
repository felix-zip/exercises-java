---

name: Параметры методов
theory: |

  Для добавления параметров в собственные методы, достаточно указать их в скобках при определении метода. Ниже пример определения статического метода, который возвращает последний символ в строке (в Java нет такого встроенного):

  ```java
  class App {
      // При определении метода тип указывать обязательно
      public static char getLastChar(String str) {
          // Вычисляем индекс последнего символа
          // извлекаем и возвращаем наружу
          return str.charAt(str.length() - 1);
      }
  }

  // Передача параметров напрямую без переменных
  App.getLastChar("Hexlet"); // 't'
  App.getLastChar("Goo"); // 'o'

  // Передача параметров через переменные
  var name1 = "Hexlet";
  App.getLastChar(name1); // 't'

  var name2 = "Goo";
  App.getLastChar(name2); // 'o'
  ```

  У метода `getLastChar()` ровно один параметр типа `String" и он обязателен. Если попробовать вызвать метод без параметра, то компилятор выдаст ошибку:

  ```sh
  method getLastChar in class App cannot be applied to given types;
    required: String
    found:    no arguments
    reason: actual and formal argument lists differ in length
  ```

  Точно таким же образом можно указывать два, три и более параметров:

  ```java
  class App {
      // Метод по нахождению среднего числа
      // Возвращаемый тип double
      public static double average(int x, int y) {
          return (x + y) / 2.0;
      }
    }

  App.average(1, 5); // 3.0
  App.average(1, 2); // 1.5
  ```

instructions: |

  Реализуйте статический метод `truncate()`, который обрезает переданную строку и добавляет в конце троеточие. Подобная логика часто используется на сайтах, чтобы отобразить длинный текст в сокращенном виде. Параметры метода:

  1. Строка, которую нужно обрезать
  2. Число символов, которые нужно оставить

  ```java
  App.truncate('hexlet', 2); // "he..."

  var text = 'it works!'
  var result = App.truncate(text, 4);
  System.out.println(result); // => "it w..."
  ```

  В этой задаче вам нужно взять подстроку из строки, переданной первым параметром. Для этого вам понадобится метод [substring()](https://ru.hexlet.io/qna/java/questions/kak-izvlech-podstroku-iz-stroki-v-java). Подумайте исходя из задания, с какого индекса и по какой вам надо извлечь подстроку?

# tips:
#   - |
#     Чтобы указать в аргументах метода printSeq() целое число, используйте тип данных `int`.
